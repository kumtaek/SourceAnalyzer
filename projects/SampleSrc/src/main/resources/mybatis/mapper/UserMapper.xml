<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.UserMapper">
    
    <!-- 사용자 결과 매핑 -->
    <resultMap id="UserResultMap" type="com.example.model.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="fullName" column="full_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="userType" column="user_type"/>
        <result property="createdDate" column="created_date"/>
        <result property="lastLoginDate" column="last_login_date"/>
        <result property="updatedDate" column="updated_date"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="isPremium" column="is_premium"/>
        <result property="isNormal" column="is_normal"/>
        <result property="isGuest" column="is_guest"/>
        <result property="emailVerified" column="email_verified"/>
        <result property="phoneVerified" column="phone_verified"/>
    </resultMap>

    <!-- 조건에 따른 사용자 목록 조회 -->
    <select id="findUsersByCondition" parameterType="map" resultMap="UserResultMap">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.phone,
            u.status,
            u.user_type,
            u.created_date,
            u.last_login_date,
            u.updated_date,
            CASE WHEN u.user_type = 'ADMIN' THEN 1 ELSE 0 END as is_admin,
            CASE WHEN u.user_type = 'PREMIUM' THEN 1 ELSE 0 END as is_premium,
            CASE WHEN u.user_type = 'NORMAL' THEN 1 ELSE 0 END as is_normal,
            CASE WHEN u.user_type = 'GUEST' THEN 1 ELSE 0 END as is_guest,
            u.email_verified,
            u.phone_verified
        FROM users u
        WHERE u.del_yn = 'N'
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <when test="searchType == 'username'">
                    AND u.username LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchType == 'email'">
                    AND u.email LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchType == 'name'">
                    AND u.full_name LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchType == 'phone'">
                    AND u.phone LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <otherwise>
                    AND (u.username LIKE CONCAT('%', #{searchKeyword}, '%')
                         OR u.email LIKE CONCAT('%', #{searchKeyword}, '%')
                         OR u.full_name LIKE CONCAT('%', #{searchKeyword}, '%'))
                </otherwise>
            </choose>
            </if>
            <if test="status != null and status != ''">
                AND u.status = #{status}
            </if>
        <if test="userType != null and userType != ''">
            AND u.user_type = #{userType}
        </if>
        <if test="startDate != null and startDate != ''">
            AND u.created_date >= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND u.created_date &lt;= #{endDate}
        </if>
        ORDER BY u.created_date DESC
        <if test="pageSize != null and offset != null">
            LIMIT #{pageSize} OFFSET #{offset}
            </if>
    </select>
    
    <!-- 고급 조건으로 사용자 조회 -->
    <select id="findUsersByAdvancedCondition" parameterType="map" resultMap="UserResultMap">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.phone,
            u.status,
            u.user_type,
            u.created_date,
            u.last_login_date,
            u.updated_date,
            CASE WHEN u.user_type = 'ADMIN' THEN 1 ELSE 0 END as is_admin,
            CASE WHEN u.user_type = 'PREMIUM' THEN 1 ELSE 0 END as is_premium,
            CASE WHEN u.user_type = 'NORMAL' THEN 1 ELSE 0 END as is_normal,
            CASE WHEN u.user_type = 'GUEST' THEN 1 ELSE 0 END as is_guest,
            u.email_verified,
            u.phone_verified
        FROM users u
        WHERE u.del_yn = 'N'
        <if test="minAge != null and maxAge != null">
            AND u.age BETWEEN #{minAge} AND #{maxAge}
        </if>
        <if test="minBirthDate != null">
            AND u.birth_date &lt;= #{minBirthDate}
            </if>
        <if test="maxBirthDate != null">
            AND u.birth_date >= #{maxBirthDate}
            </if>
            <if test="statusList != null and statusList.size() > 0">
                AND u.status IN
                <foreach collection="statusList" item="status" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
        <if test="userTypes != null and userTypes.size() > 0">
            AND u.user_type IN
            <foreach collection="userTypes" item="userType" open="(" separator="," close=")">
                #{userType}
            </foreach>
            </if>
        <if test="hasEmailVerified != null">
                <choose>
                <when test="hasEmailVerified == true">
                    AND u.email_verified = 1
                    </when>
                    <otherwise>
                    AND u.email_verified = 0
                    </otherwise>
                </choose>
            </if>
        <if test="hasPhoneVerified != null">
                <choose>
                <when test="hasPhoneVerified == true">
                    AND u.phone_verified = 1
                    </when>
                    <otherwise>
                    AND u.phone_verified = 0
                    </otherwise>
                </choose>
            </if>
        ORDER BY 
        <choose>
            <when test="orderBy == 'username'">u.username</when>
            <when test="orderBy == 'email'">u.email</when>
            <when test="orderBy == 'createdDate'">u.created_date</when>
            <when test="orderBy == 'lastLogin'">u.last_login_date</when>
            <otherwise>u.created_date</otherwise>
        </choose>
                <choose>
            <when test="orderDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        <if test="pageSize != null and offset != null">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>
    
    <!-- 사용자 타입별 조회 -->
    <select id="findUsersByType" parameterType="string" resultMap="UserResultMap">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.phone,
            u.status,
            u.user_type,
            u.created_date,
            u.last_login_date,
            u.updated_date,
            CASE WHEN u.user_type = 'ADMIN' THEN 1 ELSE 0 END as is_admin,
            CASE WHEN u.user_type = 'PREMIUM' THEN 1 ELSE 0 END as is_premium,
            CASE WHEN u.user_type = 'NORMAL' THEN 1 ELSE 0 END as is_normal,
            CASE WHEN u.user_type = 'GUEST' THEN 1 ELSE 0 END as is_guest,
            u.email_verified,
            u.phone_verified
        FROM users u
        WHERE u.del_yn = 'N'
        AND u.user_type = #{userType}
        ORDER BY u.created_date DESC
    </select>
    
    <!-- 사용자 ID로 조회 -->
    <select id="findUserById" parameterType="string" resultMap="UserResultMap">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.phone,
            u.status,
            u.user_type,
            u.created_date,
            u.last_login_date,
            u.updated_date,
            CASE WHEN u.user_type = 'ADMIN' THEN 1 ELSE 0 END as is_admin,
            CASE WHEN u.user_type = 'PREMIUM' THEN 1 ELSE 0 END as is_premium,
            CASE WHEN u.user_type = 'NORMAL' THEN 1 ELSE 0 END as is_normal,
            CASE WHEN u.user_type = 'GUEST' THEN 1 ELSE 0 END as is_guest,
            u.email_verified,
            u.phone_verified
        FROM users u
        WHERE u.user_id = #{userId}
        AND u.del_yn = 'N'
    </select>

    <!-- 사용자 생성 -->
    <insert id="createUser" parameterType="map" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (
            username,
            full_name,
            email,
            phone,
            password,
            status,
            user_type,
            created_date,
            email_verified,
            phone_verified,
            del_yn
        ) VALUES (
            #{username},
            #{fullName},
            #{email},
            #{phone},
            #{password},
            #{status},
            #{userType},
            #{createdDate},
            #{emailVerified},
            #{phoneVerified},
            'N'
        )
    </insert>

    <!-- 사용자 정보 수정 -->
    <update id="updateUser" parameterType="map">
        UPDATE users SET
            <if test="fullName != null">full_name = #{fullName},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="status != null">status = #{status},</if>
            <if test="userType != null">user_type = #{userType},</if>
            <if test="password != null">password = #{password},</if>
            <if test="emailVerified != null">email_verified = #{emailVerified},</if>
            <if test="phoneVerified != null">phone_verified = #{phoneVerified},</if>
            updated_date = #{updatedDate}
        WHERE user_id = #{userId}
        AND del_yn = 'N'
    </update>

    <!-- 사용자 삭제 (논리 삭제) -->
    <update id="deleteUser" parameterType="string">
        UPDATE users SET
            del_yn = 'Y',
            updated_date = NOW()
        WHERE user_id = #{userId}
        AND del_yn = 'N'
    </update>

    <!-- 사용자명 중복 확인 -->
    <select id="existsByUsername" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE username = #{username}
        AND del_yn = 'N'
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="existsByEmail" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE email = #{email}
        AND del_yn = 'N'
    </select>

    <!-- 이메일 인증 여부 확인 -->
    <select id="isEmailVerified" parameterType="string" resultType="boolean">
        SELECT email_verified
        FROM users
        WHERE user_id = #{userId}
        AND del_yn = 'N'
    </select>

    <!-- 전화번호 인증 여부 확인 -->
    <select id="isPhoneVerified" parameterType="string" resultType="boolean">
        SELECT phone_verified
        FROM users
        WHERE user_id = #{userId}
        AND del_yn = 'N'
    </select>

    <!-- 총 사용자 수 조회 -->
    <select id="getTotalUserCount" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE del_yn = 'N'
    </select>

    <!-- 활성 사용자 수 조회 -->
    <select id="getActiveUserCount" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE status = 'ACTIVE'
        AND del_yn = 'N'
    </select>

    <!-- 오늘 가입 사용자 수 조회 -->
    <select id="getNewUsersTodayCount" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE DATE(created_date) = CURDATE()
        AND del_yn = 'N'
    </select>

    <!-- 프리미엄 사용자 수 조회 -->
    <select id="getPremiumUserCount" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE user_type = 'PREMIUM'
        AND del_yn = 'N'
    </select>

    <!-- 사용자 로그인 기록 업데이트 -->
    <update id="updateLastLogin" parameterType="string">
        UPDATE users SET
            last_login_date = NOW(),
            updated_date = NOW()
        WHERE user_id = #{userId}
        AND del_yn = 'N'
    </update>

    <!-- 사용자 상태별 통계 -->
    <select id="getUserStatisticsByStatus" resultType="map">
        SELECT 
            status,
            COUNT(*) as count
        FROM users
        WHERE del_yn = 'N'
        GROUP BY status
        ORDER BY count DESC
    </select>

    <!-- 사용자 타입별 통계 -->
    <select id="getUserStatisticsByType" resultType="map">
        SELECT 
            user_type,
            COUNT(*) as count
        FROM users
        WHERE del_yn = 'N'
        GROUP BY user_type
        ORDER BY count DESC
    </select>
    
    <!-- 월별 가입자 통계 -->
    <select id="getMonthlyRegistrationStats" parameterType="int" resultType="map">
        SELECT 
            DATE_FORMAT(created_date, '%Y-%m') as month,
            COUNT(*) as count
        FROM users
        WHERE del_yn = 'N'
        AND created_date >= DATE_SUB(NOW(), INTERVAL #{months} MONTH)
        GROUP BY DATE_FORMAT(created_date, '%Y-%m')
        ORDER BY month DESC
    </select>
    
    <!-- 복잡한 조인 쿼리: 사용자와 주문 정보 -->
    <select id="findUsersWithOrderInfo" parameterType="map" resultType="map">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.status,
            u.user_type,
            COUNT(o.order_id) as order_count,
            COALESCE(SUM(o.total_amount), 0) as total_order_amount,
            MAX(o.created_date) as last_order_date
        FROM users u
        LEFT JOIN orders o ON u.user_id = o.user_id AND o.del_yn = 'N'
        WHERE u.del_yn = 'N'
        <if test="userType != null and userType != ''">
            AND u.user_type = #{userType}
        </if>
        <if test="minOrderAmount != null">
            HAVING total_order_amount >= #{minOrderAmount}
        </if>
        GROUP BY u.user_id, u.username, u.full_name, u.email, u.status, u.user_type
        ORDER BY total_order_amount DESC
        <if test="pageSize != null and offset != null">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>
    
    <!-- 동적 SQL을 사용한 복잡한 검색 -->
    <select id="findUsersByComplexSearch" parameterType="map" resultMap="UserResultMap">
        SELECT 
            u.user_id,
            u.username,
            u.full_name,
            u.email,
            u.phone,
            u.status,
            u.user_type,
            u.created_date,
            u.last_login_date
        FROM users u
        <if test="hasOrders != null or minOrderCount != null or maxOrderAmount != null">
            LEFT JOIN (
                SELECT 
                    user_id,
                    COUNT(*) as order_count,
                    SUM(total_amount) as total_amount
                FROM orders
                WHERE del_yn = 'N'
                GROUP BY user_id
            ) o ON u.user_id = o.user_id
        </if>
        WHERE u.del_yn = 'N'
        <if test="searchConditions != null and searchConditions.size() > 0">
            AND (
            <foreach collection="searchConditions" item="condition" separator=" OR ">
                <choose>
                    <when test="condition.type == 'username'">
                        u.username LIKE CONCAT('%', #{condition.value}, '%')
                    </when>
                    <when test="condition.type == 'email'">
                        u.email LIKE CONCAT('%', #{condition.value}, '%')
                    </when>
                    <when test="condition.type == 'name'">
                        u.full_name LIKE CONCAT('%', #{condition.value}, '%')
                    </when>
                    <when test="condition.type == 'phone'">
                        u.phone LIKE CONCAT('%', #{condition.value}, '%')
                    </when>
                </choose>
            </foreach>
            )
        </if>
        <if test="hasOrders != null">
            <choose>
                <when test="hasOrders == true">
                    AND o.user_id IS NOT NULL
                </when>
                <otherwise>
                    AND o.user_id IS NULL
                </otherwise>
            </choose>
        </if>
        <if test="minOrderCount != null">
            AND o.order_count >= #{minOrderCount}
        </if>
        <if test="maxOrderAmount != null">
            AND o.total_amount &lt;= #{maxOrderAmount}
        </if>
        ORDER BY u.created_date DESC
    </select>
    
</mapper>