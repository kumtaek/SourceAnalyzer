<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.VersionedDao">

    <!-- 사용자 조회 - v1 API -->
    <select id="selectUsersV1" resultType="map">
        SELECT 
            user_id,
            username,
            email,
            status,
            created_at
        FROM users
        WHERE del_yn = 'N'
        ORDER BY created_at DESC
    </select>

    <!-- 사용자 조회 - v2 API (개선된 버전) -->
    <select id="selectUsersV2" resultType="map">
        SELECT 
            u.user_id,
            u.username,
            u.email,
            u.status,
            u.created_at,
            u.updated_at,
            ui.phone,
            ui.last_login_at,
            COUNT(o.order_id) as order_count
        FROM users u
        LEFT JOIN user_info ui ON u.user_id = ui.user_id
        LEFT JOIN orders o ON u.user_id = o.user_id AND o.del_yn = 'N'
        WHERE u.del_yn = 'N'
        GROUP BY u.user_id
        ORDER BY u.created_at DESC
    </select>

    <!-- 제품 조회 - v1 API -->
    <select id="selectProductsV1" resultType="map">
        SELECT 
            product_id,
            product_name,
            price,
            stock_quantity,
            category_id,
            created_at
        FROM products
        WHERE del_yn = 'N'
          AND status = 'ACTIVE'
        ORDER BY created_at DESC
    </select>

    <!-- 제품 조회 - v2 API (페이징 지원) -->
    <select id="selectProductsV2" resultType="map">
        SELECT 
            p.product_id,
            p.product_name,
            p.price,
            p.stock_quantity,
            p.category_id,
            c.category_name,
            p.created_at,
            COUNT(oi.order_item_id) as order_count
        FROM products p
        JOIN categories c ON p.category_id = c.category_id
        LEFT JOIN order_items oi ON p.product_id = oi.product_id AND oi.del_yn = 'N'
        WHERE p.del_yn = 'N'
          AND p.status = 'ACTIVE'
        GROUP BY p.product_id
        ORDER BY p.created_at DESC
        LIMIT #{size} OFFSET #{page}
    </select>

    <!-- 주문 조회 - v1 API -->
    <select id="selectOrdersV1" resultType="map">
        SELECT 
            order_id,
            user_id,
            order_date,
            total_amount,
            status,
            created_at
        FROM orders
        WHERE del_yn = 'N'
        ORDER BY order_date DESC
    </select>

    <!-- 주문 조회 - v2 API (필터링 지원) -->
    <select id="selectOrdersV2" resultType="map">
        SELECT 
            o.order_id,
            o.user_id,
            o.order_date,
            o.total_amount,
            o.status,
            o.created_at,
            u.username,
            u.email,
            COUNT(oi.order_item_id) as item_count
        FROM orders o
        JOIN users u ON o.user_id = u.user_id
        LEFT JOIN order_items oi ON o.order_id = oi.order_id AND oi.del_yn = 'N'
        WHERE o.del_yn = 'N'
        <if test="status != null and status != ''">
            AND o.status = #{status}
        </if>
        <if test="dateFrom != null and dateFrom != ''">
            AND o.order_date >= #{dateFrom}
        </if>
        <if test="dateTo != null and dateTo != ''">
            AND o.order_date <= #{dateTo}
        </if>
        GROUP BY o.order_id
        ORDER BY o.order_date DESC
    </select>

</mapper>
