<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  include 태그 테스트용 MyBatis 매퍼
  Enhanced 파싱 기능 테스트: SQL 조각 정의 및 참조
-->
<mapper namespace="com.example.testcase.TestIncludeMapper">

    <!-- 
    SQL 조각 정의 - 기본 사용자 필드
    -->
    <sql id="baseUserFields">
        u.user_id, u.username, u.email, u.status, u.created_date
    </sql>
    
    <!-- 
    SQL 조각 정의 - 사용자 프로필 조인
    -->
    <sql id="userProfileJoins">
        LEFT JOIN user_profiles up ON u.user_id = up.user_id
        LEFT JOIN user_settings us ON u.user_id = us.user_id
    </sql>
    
    <!-- 
    SQL 조각 정의 - 주문 관련 조인
    -->
    <sql id="orderJoins">
        LEFT JOIN orders o ON u.user_id = o.user_id
        LEFT JOIN order_items oi ON o.order_id = oi.order_id
        LEFT JOIN products p ON oi.product_id = p.product_id
    </sql>
    
    <!-- 
    SQL 조각 정의 - 복합 조인 (다른 조각 참조)
    -->
    <sql id="complexJoins">
        <include refid="userProfileJoins"/>
        <include refid="orderJoins"/>
        LEFT JOIN categories c ON p.category_id = c.category_id
    </sql>
    
    <!-- 
    테스트 1: 단순 include 참조
    예상 테이블: users, user_profiles, user_settings
    -->
    <select id="testSimpleInclude" resultType="map">
        SELECT <include refid="baseUserFields"/>,
               up.full_name, up.phone, up.address,
               us.theme, us.language
        FROM users u
        <include refid="userProfileJoins"/>
        WHERE u.status = 'ACTIVE'
        ORDER BY u.created_date DESC
    </select>
    
    <!-- 
    테스트 2: 중첩 include 참조
    예상 테이블: users, user_profiles, user_settings, orders, order_items, products, categories
    -->
    <select id="testNestedInclude" resultType="map">
        SELECT <include refid="baseUserFields"/>,
               up.full_name, o.order_date, p.product_name, c.category_name
        FROM users u
        <include refid="complexJoins"/>
        WHERE u.status = 'ACTIVE'
        AND o.status = 'COMPLETED'
        ORDER BY o.order_date DESC
    </select>
    
    <!-- 
    테스트 3: include + 동적 SQL 조합
    예상 테이블: users, user_profiles, user_settings, orders (조건부), payments (조건부)
    -->
    <select id="testIncludeWithDynamicSQL" resultType="map">
        SELECT <include refid="baseUserFields"/>,
               up.full_name
               <if test="includeOrderInfo == 'Y'">
                   , o.order_date, o.total_amount
               </if>
               <if test="includePaymentInfo == 'Y'">
                   , pm.payment_method, pm.payment_status
               </if>
        FROM users u
        <include refid="userProfileJoins"/>
        <if test="includeOrderInfo == 'Y'">
            LEFT JOIN orders o ON u.user_id = o.user_id
        </if>
        <if test="includePaymentInfo == 'Y'">
            LEFT JOIN payments pm ON o.order_id = pm.order_id
        </if>
        WHERE u.status = 'ACTIVE'
        ORDER BY u.created_date DESC
    </select>
    
    <!-- 
    테스트 4: INSERT with include
    예상 테이블: user_audit_logs, users (참조)
    -->
    <insert id="testInsertWithInclude">
        INSERT INTO user_audit_logs (
            user_id, action_type, action_details, created_date
        )
        SELECT <include refid="baseUserFields"/>, 
               'LOGIN' as action_type,
               'User login recorded' as action_details,
               SYSDATE as audit_created_date
        FROM users u
        WHERE u.user_id = #{userId}
    </insert>
    
    <!-- 
    테스트 5: UPDATE with include  
    예상 테이블: users, user_profiles (참조)
    -->
    <update id="testUpdateWithInclude">
        UPDATE users u SET 
            u.last_login_date = SYSDATE,
            u.login_count = u.login_count + 1
        WHERE u.user_id IN (
            SELECT u2.user_id
            FROM users u2
            <include refid="userProfileJoins"/>
            WHERE up.verification_status = 'VERIFIED'
            AND us.notification_enabled = 'Y'
        )
    </update>

</mapper>
