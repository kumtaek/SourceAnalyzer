<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  성능 테스트용 대용량 MyBatis 매퍼 (1000줄)
  목적: 메모리 집약적 시나리오, 복잡한 동적 SQL, 다양한 테이블 관계 테스트
  연관관계 중심: 거의 모든 비즈니스 테이블과의 복합적 관계 표현
-->
<mapper namespace="com.example.performance.PerformanceTestMapper">

    <!-- SQL 조각들 - 재사용을 위한 공통 부분들 -->
    <sql id="baseUserFields">
        u.user_id, u.username, u.email, u.full_name, u.status, u.user_type, 
        u.created_date, u.updated_date, u.last_login_date
    </sql>
    
    <sql id="extendedUserFields">
        <include refid="baseUserFields"/>,
        p.phone, p.address, p.birth_date, p.gender, p.profile_image_url,
        d.dept_id, d.dept_name, d.manager_id
    </sql>
    
    <sql id="baseOrderFields">
        o.order_id, o.order_date, o.total_amount, o.status as order_status,
        o.payment_method, o.shipping_address, o.tracking_number
    </sql>
    
    <sql id="baseProductFields">
        pr.product_id, pr.product_name, pr.price, pr.stock_quantity,
        pr.category_id, pr.brand_id, pr.status as product_status
    </sql>

    <!-- 
    쿼리 1: 대용량 사용자 데이터 조회 - 복잡한 동적 SQL
    연관 테이블: users_{env}, user_profiles_{env}, departments_{env}, user_settings_{env}, 
                user_roles_{env}, roles_{env}, orders_{env}
    -->
    <select id="findLargeUserDataset" parameterType="map" resultType="map">
        SELECT 
        <choose>
            <when test="includeExtendedInfo == 'Y'">
                <include refid="extendedUserFields"/>,
                s.theme, s.language, s.timezone,
                COUNT(DISTINCT ur.role_id) as role_count,
                GROUP_CONCAT(DISTINCT r.role_name) as roles,
                COUNT(DISTINCT o.order_id) as order_count,
                SUM(o.total_amount) as total_spent,
                MAX(o.order_date) as last_order_date
            </when>
            <otherwise>
                <include refid="baseUserFields"/>,
                COUNT(DISTINCT o.order_id) as order_count
            </otherwise>
        </choose>
        
        FROM users_${environment} u
        LEFT JOIN user_profiles_${environment} p ON u.user_id = p.user_id
        LEFT JOIN departments_${environment} d ON u.dept_id = d.dept_id
        LEFT JOIN user_settings_${environment} s ON u.user_id = s.user_id
        
        <if test="includeExtendedInfo == 'Y'">
            LEFT JOIN user_roles_${environment} ur ON u.user_id = ur.user_id
            LEFT JOIN roles_${environment} r ON ur.role_id = r.role_id
        </if>
        
        LEFT JOIN orders_${environment} o ON u.user_id = o.user_id
        
        <where>
            u.del_yn = 'N'
            <if test="userStatus != null and userStatus != ''">
                AND u.status = #{userStatus}
            </if>
            <if test="userType != null and userType != ''">
                AND u.user_type = #{userType}
            </if>
            <if test="departmentIds != null and departmentIds.size() > 0">
                AND u.dept_id IN
                <foreach collection="departmentIds" item="deptId" open="(" separator="," close=")">
                    #{deptId}
                </foreach>
            </if>
            <if test="createdDateFrom != null">
                AND u.created_date >= #{createdDateFrom}
            </if>
            <if test="createdDateTo != null">
                AND u.created_date &lt;= #{createdDateTo}
            </if>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (u.username LIKE CONCAT('%', #{searchKeyword}, '%')
                     OR u.email LIKE CONCAT('%', #{searchKeyword}, '%')
                     OR u.full_name LIKE CONCAT('%', #{searchKeyword}, '%'))
            </if>
        </where>
        
        <if test="includeExtendedInfo == 'Y'">
            GROUP BY u.user_id, u.username, u.email, u.full_name, u.status, u.user_type,
                     u.created_date, u.updated_date, u.last_login_date,
                     p.phone, p.address, p.birth_date, p.gender, p.profile_image_url,
                     d.dept_id, d.dept_name, d.manager_id,
                     s.theme, s.language, s.timezone
        </if>
        
        ORDER BY u.created_date DESC
        
        <if test="pageSize != null and pageOffset != null">
            LIMIT #{pageSize} OFFSET #{pageOffset}
        </if>
    </select>

    <!-- 
    쿼리 2: 복합 주문 분석 - 다중 테이블 조인
    연관 테이블: orders_{env}, users_{env}, customers_{env}, order_items_{env}, 
                products_{env}, categories_{env}, brands_{env}, payments_{env}
    -->
    <select id="analyzeComplexOrderData" parameterType="map" resultType="map">
        SELECT 
            <include refid="baseOrderFields"/>,
            <include refid="baseUserFields"/>,
            c.customer_id, c.company_name, c.industry, c.credit_rating,
            
            <if test="includeProductInfo == 'Y'">
                <include refid="baseProductFields"/>,
                cat.category_name, b.brand_name,
                SUM(oi.quantity) as total_quantity,
                COUNT(DISTINCT oi.product_id) as unique_products
            </if>
            
            <if test="includePaymentInfo == 'Y'">
                , pay.payment_id, pay.payment_date, pay.amount as payment_amount,
                pay.currency, pay.status as payment_status
            </if>
        
        FROM orders_${environment} o
        INNER JOIN users_${environment} u ON o.user_id = u.user_id
        LEFT JOIN customers_${environment} c ON u.customer_id = c.customer_id
        
        <if test="includeProductInfo == 'Y'">
            LEFT JOIN order_items_${environment} oi ON o.order_id = oi.order_id
            LEFT JOIN products_${environment} pr ON oi.product_id = pr.product_id
            LEFT JOIN categories_${environment} cat ON pr.category_id = cat.category_id
            LEFT JOIN brands_${environment} b ON pr.brand_id = b.brand_id
        </if>
        
        <if test="includePaymentInfo == 'Y'">
            LEFT JOIN payments_${environment} pay ON o.order_id = pay.order_id
        </if>
        
        <where>
            o.del_yn = 'N' AND u.del_yn = 'N'
            <if test="orderDateFrom != null">
                AND o.order_date >= #{orderDateFrom}
            </if>
            <if test="orderDateTo != null">
                AND o.order_date &lt;= #{orderDateTo}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                AND o.status = #{orderStatus}
            </if>
            <if test="minOrderAmount != null">
                AND o.total_amount >= #{minOrderAmount}
            </if>
        </where>
        
        <if test="includeProductInfo == 'Y'">
            GROUP BY o.order_id, o.order_date, o.total_amount, o.status,
                     u.user_id, u.username, u.email, c.customer_id, c.company_name
        </if>
        
        ORDER BY o.order_date DESC, o.total_amount DESC
        
        <if test="maxResults != null">
            LIMIT #{maxResults}
        </if>
    </select>

</mapper>