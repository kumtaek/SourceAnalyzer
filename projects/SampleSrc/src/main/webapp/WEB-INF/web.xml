<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <display-name>Sample Servlet Application</display-name>
    <description>Servlet 분석기 테스트를 위한 샘플 애플리케이션</description>

    <!-- 1. ProductCatalogServlet - HttpServlet 상속만 사용 -->
    <servlet>
        <servlet-name>ProductCatalogServlet</servlet-name>
        <servlet-class>com.example.servlet.ProductCatalogServlet</servlet-class>
        <init-param>
            <param-name>cacheEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>maxCacheSize</param-name>
            <param-value>1000</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProductCatalogServlet</servlet-name>
        <url-pattern>/product/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ProductCatalogServlet</servlet-name>
        <url-pattern>/catalog/*</url-pattern>
    </servlet-mapping>

    <!-- 2. OrderManagementServlet - service() 메서드 오버라이드 -->
    <servlet>
        <servlet-name>OrderManagementServlet</servlet-name>
        <servlet-class>com.example.servlet.OrderManagementServlet</servlet-class>
        <init-param>
            <param-name>orderStatusTracking</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>autoCleanup</param-name>
            <param-value>false</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>OrderManagementServlet</servlet-name>
        <url-pattern>/order/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>OrderManagementServlet</servlet-name>
        <url-pattern>/api/v1/orders</url-pattern>
    </servlet-mapping>

    <!-- 3. LegacyPaymentServlet - 레거시 결제 시스템 -->
    <servlet>
        <servlet-name>LegacyPaymentServlet</servlet-name>
        <servlet-class>com.example.servlet.LegacyPaymentServlet</servlet-class>
        <init-param>
            <param-name>paymentGateway</param-name>
            <param-value>legacy</param-value>
        </init-param>
        <init-param>
            <param-name>timeout</param-name>
            <param-value>30000</param-value>
        </init-param>
        <init-param>
            <param-name>retryCount</param-name>
            <param-value>3</param-value>
        </init-param>
        <load-on-startup>4</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>LegacyPaymentServlet</servlet-name>
        <url-pattern>/payment/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LegacyPaymentServlet</servlet-name>
        <url-pattern>/legacy/payment/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LegacyPaymentServlet</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!-- 4. GenericServlet 상속 테스트용 Servlet -->
    <servlet>
        <servlet-name>GenericTestServlet</servlet-name>
        <servlet-class>com.example.servlet.GenericTestServlet</servlet-class>
        <init-param>
            <param-name>testMode</param-name>
            <param-value>enabled</param-value>
        </init-param>
        <load-on-startup>5</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>GenericTestServlet</servlet-name>
        <url-pattern>/test/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GenericTestServlet</servlet-name>
        <url-pattern>/generic/*</url-pattern>
    </servlet-mapping>

    <!-- 5. 확장자 매핑 테스트 -->
    <servlet>
        <servlet-name>ExtensionMappingServlet</servlet-name>
        <servlet-class>com.example.servlet.ExtensionMappingServlet</servlet-class>
        <load-on-startup>6</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ExtensionMappingServlet</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ExtensionMappingServlet</servlet-name>
        <url-pattern>*.process</url-pattern>
    </servlet-mapping>

    <!-- 6. 직접 쿼리 조합 Servlet -->
    <servlet>
        <servlet-name>DirectQueryServlet</servlet-name>
        <servlet-class>com.example.servlet.DirectQueryServlet</servlet-class>
        <load-on-startup>7</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DirectQueryServlet</servlet-name>
        <url-pattern>/direct-query/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DirectQueryServlet</servlet-name>
        <url-pattern>/api/v1/direct-query</url-pattern>
    </servlet-mapping>

    <!-- 필터 설정 (Servlet 분석과는 별개이지만 테스트용) -->
    <filter>
        <filter-name>LoggingFilter</filter-name>
        <filter-class>com.example.filter.LoggingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 에러 페이지 설정 -->
    <error-page>
        <error-code>404</error-code>
        <location>/error/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error/500.jsp</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/error/exception.jsp</location>
    </error-page>

    <!-- 세션 설정 -->
    <session-config>
        <session-timeout>30</session-timeout>
        <cookie-config>
            <http-only>true</http-only>
            <secure>false</secure>
        </cookie-config>
    </session-config>

    <!-- MIME 타입 설정 -->
    <mime-mapping>
        <extension>json</extension>
        <mime-type>application/json</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xml</extension>
        <mime-type>application/xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>csv</extension>
        <mime-type>text/csv</mime-type>
    </mime-mapping>

    <!-- 웰컴 파일 설정 -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>home.jsp</welcome-file>
    </welcome-file-list>

    <!-- 보안 설정 -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Admin Area</web-resource-name>
            <url-pattern>/admin/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>

    <!-- 컨텍스트 파라미터 -->
    <context-param>
        <param-name>appName</param-name>
        <param-value>Sample Servlet Test Application</param-value>
    </context-param>
    <context-param>
        <param-name>appVersion</param-name>
        <param-value>1.0.0</param-value>
    </context-param>
    <context-param>
        <param-name>debugMode</param-name>
        <param-value>true</param-value>
    </context-param>

</web-app>
